<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/testdb"/>
        <property name="username" value="spring"/>
        <property name="password" value="book"/>
    </bean>

    <!--p.483 6-53 ProxyFactoryBean을 제거한 후의 빈 설정-->
    <bean id="userService" class="com.springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <!--스태틱 멤버 클래스는 $로 지정한다.-->
    <bean id="testUserService" class="com.springbook.user.service.UserServiceImpl$TestUserService"
        parent="userService"/>

    <bean id="userDao" class="com.springbook.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="mailSender" class="com.springbook.user.service.DummyMailSender">
        <property name="host" value="mail.server.com"/>
    </bean>

    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* *..*ServiceImpl.upgrade*(..))"/>
    </aop:config>

    <!--
    <bean id="transactionAdvice" class="com.springbook.proxy.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>
    -->
<!--
    <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly,timeout_30</prop>
                <prop key="upgrade*">PROPAGATION_REQUIRES_NEW,ISOLATION_SERIALIZABLE</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
-->
    <!--아래 태그에 의해 TransactionInterceptor 빈이 등록된다.-->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <!--트랜잭션 매니저의 빈 아이디가 transactionManager라면 생략 가능-->
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED" read-only="true" timeout="30"/>
            <tx:method name="upgrade*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>
            <!--Enumeration으로 스키마에 값이 정의되어 있으므로 오타가 있으면 XML 유효성 검사만으로 확인 가능-->
            <tx:method name="*" propagation="REQUIRED"/>
            <!--디폴트 값이 스키마에 정의되어 있으므로 REQUIRED라면 생략 가능-->
        </tx:attributes>
    </tx:advice>
</beans>