<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/testdb"/>
        <property name="username" value="spring"/>
        <property name="password" value="book"/>
    </bean>

    <!--p.483 6-53 ProxyFactoryBean을 제거한 후의 빈 설정-->
    <bean id="userService" class="com.springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <!--스태틱 멤버 클래스는 $로 지정한다.-->
    <bean id="testUserService" class="com.springbook.user.service.UserServiceImpl$TestUserService"
        parent="userService"/>

    <bean id="userDao" class="com.springbook.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
        <property name="sqlService" ref="sqlService"/>
    </bean>

    <bean id="sqlService" class="com.springbook.user.sqlservice.DefaultSqlService"/>

<!--    <bean id="sqlReader" class="com.springbook.user.sqlservice.JaxbXmlSqlReader">
        <property name="sqlmapFile" value="sqlmap.xml"/>
    </bean>

    <bean id="sqlRegistry" class="com.springbook.user.sqlservice.HashMapSqlRegistry"/>-->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="mailSender" class="com.springbook.user.service.DummyMailSender">
        <property name="host" value="mail.server.com"/>
    </bean>


    <!--후처리기 등록 / cf. 스프링 부트에서는 별도로 등록하지 않아도 이미 존재한다...-->
    <tx:annotation-driven/>
    <!--@Transactional이 붙은 타입과 메서드에 트랜잭션 부가기능을 담은 프록시를 추가하도록 만들어주는 후처리기 등록-->

    <context:annotation-config/>
    <!--코드의 어노테이션을 이용해서 부가적인 빈 설정 또는 초기화 작업을 해주는 후처리기를 등록-->
</beans>